from tree import Tree
from node import Node


def generate_graph():
    FISEI = "FISEI"
    MALL = "MALL"
    N1 = "N1"
    N2 = "N2"
    N3 = "N3"
    N4 = "N4"
    N5 = "N5"
    N6 = "N6"
    N7 = "N7"
    N8 = "N8"
    N9 = "N9"
    N10 = "N10"
    N11 = "N11"
    N12 = "N12"
    N13 = "N13"
    N14 = "N14"
    N15 = "N15"
    N16 = "N16"
    return [
        (FISEI, N1, 383, 740),
        (FISEI, N2, 286, 370),
        (FISEI, N4, 288, 510),
        (FISEI, N5, 312, 390),
        (N1, N3, 237, 620),
        (N2, N6, 90, 310),
        (N2, N7, 175, 285),
        (N3, N8, 90, 590),
        (N3, N4, 130, 510),
        (N4, N3, 130, 620),
        (N4, N9, 100, 470),
        (N4, N5, 150, 390),
        (N5, N4, 150, 510),
        (N5, N10, 100, 315),
        (N5, N6, 150, 310),
        (N6, N5, 150, 390),
        (N6, N11, 115, 215),
        (N6, N7, 135, 285),
        (N7, N6, 135, 310),
        (N7, N2, 175, 370),
        (N7, N12, 130, 155),
        (N8, N3, 90, 620),
        (N8, N13, 220, 570),
        (N8, N9, 125, 470),
        (N9, N8, 125, 590),
        (N9, N10, 165, 315),
        (N9, N4, 100, 510),
        (N9, N14, 230, 465),
        (N10, N9, 165, 470),
        (N10, N5, 100, 390),
        (N10, N11, 135, 215),
        (N10, N15, 150, 245),
        (N11, N10, 135, 525),
        (N11, N12, 145, 155),
        (N11, N6, 115, 155),
        (N11, N16, 105, 160),
        (N12, N7, 130, 285),
        (N12, N11, 145, 215),
        (N12, MALL, 155, 0),
        (N13, N8, 220, 590),
        (N13, N14, 115, 465),
        (N14, N13, 115, 570),
        (N14, N9, 230, 470),
        (N14, N15, 240, 525),
        (N15, N14, 240, 465),
        (N15, N10, 150, 525),
        (N15, N16, 100, 160),
        (N16, N15, 100, 525),
        (N16, N11, 105, 215),
        (N16, MALL, 165, 0),
    ]


if __name__ == "__main__":
    graph = generate_graph()
    tree = Tree(Node(None, "FISEI", 0, 525), graph)
    tree.generate()
